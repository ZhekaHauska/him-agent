- condition: ['episodes', 'equal', 1000, 'norepeat']
  check_every: 'episodes'
  action: stop_runner
  params: {}
- condition: ['steps', 'equal', 50, 'repeat']
  check_every: 'steps'
  action: stop_episode
  params: {}
- condition: ['episodes', 'equal', 0, 'norepeat']
  check_every: 'episodes'
  action: switch_logging
  params: {}
#- condition: ['episodes', 'equal', 0, 'norepeat']
#  check_every: 'episodes'
#  action: switch_visualizing
#  params: {}

# ---- changing environment ----
- condition: ['episodes', 'equal', 0, 'norepeat']
  check_every: 'episodes'
  action: change_setup
  params:
    setup: free
    setup_id: 0
- condition: ['episodes', 'equal', 300, 'norepeat']
  check_every: 'episodes'
  action: change_setup
  params:
    setup: blocked
    setup_id: 1

# ---- CSCG workarounds ----
#- condition: ['setup_episodes', 'equal', 0, 'repeat']
#  check_every: 'episodes'
#  action: switch_strategy
#  params:
#    strategy: random
#- condition: ['setup_episodes', 'equal', 50, 'repeat']
#  check_every: 'episodes'
#  action: switch_strategy
#  params:
#    strategy: non-random
#
#- condition: ['setup_episodes', 'equal', 200, 'repeat']
#  check_every: 'episodes'
#  action: set_learning
#  params:
#    striatum: false
#    memory: false

# ---- save Table-SR baseline ----
#- condition: ['episodes', 'equal', 1000, 'norepeat']
#  check_every: 'episodes'
#  action: get_true_sr
#  params:
#    path: 'logs/true_sf_wall_gridworld_radius_0_uniform.npy'
#    observation_radius: 0

# ---- plan vs predict SF ----
#- condition: ['setup_episodes', 'equal', 0, 'repeat']
#  check_every: 'episodes'
#  action: set_parameters
#  params:
#    agent.agent.action_value_estimate: plan
#- condition: ['setup_episodes', 'equal', 100, 'repeat']
#  check_every: 'episodes'
#  action: set_parameters
#  params:
#    agent.agent.action_value_estimate: predict

# ---- cached plan -----
#- condition: ['setup_episodes', 'equal', 0, 'repeat']
#  check_every: 'episodes'
#  action: set_parameters
#  params:
#    agent.agent.use_cached_plan: false
#    agent.agent.learn_cached_plan: true
#- condition: ['setup_episodes', 'equal', 300, 'repeat']
#  check_every: 'episodes'
#  action: set_parameters
#  params:
#    agent.agent.use_cached_plan: true
#    agent.agent.learn_cached_plan: false

# ---- memory initialization ----
#- condition: ['setup_episodes', 'equal', 200, 'repeat']
#  check_every: 'episodes'
#  action: agent.initialize_sf_memory
#  params: {}
#- condition: ['setup_episodes', 'equal', 200, 'repeat']
#  check_every: 'episodes'
#  action: set_parameters
#  params:
#    agent.agent.td_steps: 1
##    agent.agent.pattern_memory.lr: 0.1
#- condition: ['setup_episodes', 'equal', 500, 'repeat']
#  check_every: 'episodes'
#  action: set_parameters
#  params:
#    agent.agent.action_value_estimate: predict
#    agent.agent.learn_cached_plan: false

# ---- sf as state ----
#- condition: ['setup_episodes', 'equal', 0, 'repeat']
#  check_every: 'episodes'
#  action: switch_strategy
#  params:
#    strategy: random
#
#- condition: ['setup_episodes', 'equal', 0, 'repeat']
#  check_every: 'episodes'
#  action: set_parameters
#  params:
#    agent.agent.td_steps: 0
#    agent.agent.learn_cached_plan: true
#
#- condition: ['setup_episodes', 'equal', 100, 'repeat']
#  check_every: 'episodes'
#  action: set_parameters
#  params:
#    agent.agent.td_steps: 1
#    agent.agent.learn_cached_plan: false
#
#- condition: ['setup_episodes', 'equal', 100, 'repeat']
#  check_every: 'episodes'
#  action: switch_strategy
#  params:
#    strategy: non-random
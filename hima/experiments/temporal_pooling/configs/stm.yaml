_type_: stp_experiment.stm
project: stp.new_tm.test_text
log: True    # wandb logging, use 'dry' for dummy do-nothing logging to test metrics collection

seed: 1337
run_all: True
reset_tm: False
iterate:
  _base_: iterate_setups.default_100k

log_schedule:
  # add emit dict to skip logging steps/seq_started
  epoch: 1
  repeat: 5

models:
  LSTM: $_stm_base.models.LSTM
  Baseline TM: $_stm_base.models.Baseline TM

  STM1:
    - predict input w/ prior belief:
        - TM.reset_ff()
        - TM.predict()
        - TM.predicted_cells.sdr -> decoder.feedforward.sdr
        - decoder.decode()
        - decoder.output.sdr -> input_prediction.sdr
    - embed input:
        - input.sdr -> embed_input.sdr
    - compute TM:
        - embed_input.sdr -> TM.feedforward.sdr
        - TM.compute()
        - TM.compare_with_prediction()
        - TM.active_cells.sdr -> TM.state.sdr
    - learn decoder:
        - embed_input.sdr -> decoder.feedback.sdr
        - decoder.learn()
    - predict input w/ posterior belief:
        - TM.active_cells.sdr -> decoder.feedforward.sdr
        - decoder.decode()
        - decoder.output.sdr -> input_posterior_prediction.sdr

  STM2:
    - predict input w/ prior belief:
        - TM.reset_ff()
        - TM2.state.sdr -> TM.context.sdr
        - TM.predict()
        - TM.predicted_cells.sdr -> concat.feedforward_#1.sdr

#        - TM2.reset_ff()
        - TM.predicted_cells.sdr -> TM2.feedforward.sdr
        - TM2.predict()
        - TM2.predicted_cells.sdr -> concat.feedforward_#2.sdr
        - concat.compute()
        - concat.output.sdr -> decoder.feedforward.sdr
        - decoder.decode()
        - decoder.output.sdr -> input_prediction.sdr
    - embed input:
        - input.sdr -> embed_input.sdr
    - compute TM^1:
        - embed_input.sdr -> TM.feedforward.sdr
        - TM.compute()
        - TM.compare_with_prediction()
        - TM.active_cells.sdr -> TM.state.sdr
    - compute TM^2:
        - TM.active_cells.sdr -> TM2.feedforward.sdr
        - TM2.compute()
        - TM2.compare_with_prediction()
        - TM2.active_cells.sdr -> TM2.state.sdr
    - learn decoder:
        - embed_input.sdr -> decoder.feedback.sdr
        - decoder.learn()
    - predict input w/ posterior belief:
        - TM.state.sdr -> concat.feedforward_#1.sdr
        - TM2.state.sdr -> concat.feedforward_#2.sdr
        - concat.compute()
        - concat.output.sdr -> decoder.feedforward.sdr
        - decoder.decode()
        - decoder.output.sdr -> input_posterior_prediction.sdr

TM:
  stm_compartment:
    # config for a compartment of a multi-compartmental STM (stm_mc)
    _base_: $_stm_base.spatial_pooler.default_layer_compartment
    learning_algo: new_sq

  stm_mc:
    # built on the multi-compartmental SP layer version
    _base_: $_stm_base.spatial_pooler.default_layer_mc

    compartments_config:
      feedforward:
        _base_: TM.stm_compartment
        rf_to_input_ratio: 3.0
#        rf_to_input_ratio: 2.0
      state:
        _base_: TM.stm_compartment
        rf_to_input_ratio: 3.0
#        rf_to_input_ratio: 2.0
      context:
        _base_: TM.stm_compartment
#        rf_to_input_ratio: 0.4
        rf_to_input_ratio: 15.0

    product_weight: 0.0
    compartments_weight:
      feedforward: 2.0
      state: 3.0
      context: 2.0

    # learning
    learning_rate: 0.002

    # output
    output_mode: rate

model:
  global_config: ???
  seed: ???
  external:
    - step
    - step_finished
    - sequence_id
    - sequence_finished
    - epoch
    - epoch_finished
    - tracking_enabled
    - learn
  pipeline: models.STM1
  track:
    # SDR Tracking
    - name: input.sdr
      tracker: trackers.sdr
      on:
        sdr_updated: input.sdr
        sequence_finished: sequence_finished
    - name: input.prediction.prior.sdr
      tracker: trackers.sdr
      on:
        sdr_updated: input_prediction.sdr
        sequence_finished: epoch_finished
    - name: input.prediction.posterior.sdr
      tracker: trackers.sdr
      on:
        sdr_updated: input_posterior_prediction.sdr
        sequence_finished: epoch_finished

    # SDR Prediction quality tracking
    - name: input.prediction.prior
      tracker: trackers.sdr_prediction
      on:
        sdr_predicted: input_prediction.sdr
        sdr_observed: embed_input.sdr
        both_known: embed_input.sdr
        sequence_finished: sequence_finished
    - name: input.prediction.posterior
      tracker: trackers.sdr_prediction
      on:
        sdr_predicted: input_posterior_prediction.sdr
        sdr_observed: embed_input.sdr
        both_known: input_posterior_prediction.sdr
        sequence_finished: sequence_finished
    - name: state_L1.prediction
      tracker: trackers.sdr_prediction
      on:
        sdr_predicted: TM.predicted_cells.sdr
        sdr_observed: TM.active_cells.sdr
        both_known: TM.correctly_predicted_cells.sdr
        sequence_finished: sequence_finished
    - name: state_L2.prediction
      tracker: trackers.sdr_prediction
      on:
        sdr_predicted: TM2.predicted_cells.sdr
        sdr_observed: TM2.active_cells.sdr
        both_known: TM2.active_cells.sdr
        sequence_finished: sequence_finished

    # SP Matching Tracking
    # L1
    - name: state_L1.sp_matching.prior
      tracker: trackers.sp_matching
      on:
        sp_computed: TM.predicted_cells.sdr
        sequence_finished: sequence_finished
    - name: state_L1.sp_matching.posterior
      tracker: trackers.sp_matching
      on:
        sp_computed: TM.active_cells.sdr
        sequence_finished: sequence_finished
    # L2
    - name: state_L2.sp_matching.prior
      tracker: trackers.sp_matching
      on:
        sp_computed: TM2.predicted_cells.sdr
        sequence_finished: sequence_finished
    - name: state_L2.sp_matching.posterior
      tracker: trackers.sp_matching
      on:
        sp_computed: TM2.active_cells.sdr
        sequence_finished: sequence_finished

    # SP Synaptogenesis tracking
    - name: state_L1.sp_synaptogenesis
      tracker: trackers.sp_synaptogenesis_concat
      on:
        sp_computed: TM.active_cells.sdr
        sequence_finished: sequence_finished
    # SP Synaptogenesis tracking
    - name: state_L2.sp_synaptogenesis
      tracker: trackers.sp_synaptogenesis_concat
      on:
        sp_computed: TM2.active_cells.sdr
        sequence_finished: sequence_finished

diff_stats:
  online_el:
    - input.sdr/epoch/sim_mx_on_el

data: datas.text_sequences_bucket

blocks:
  concat:
    _type_: block.concatenator
  decoder:
    _type_: block.decoder
    decoder:
      _base_: $_stm_base.decoder.mlp
      output_mode: rate
  TM:
    _type_: block.stm_mc
    _base_: $_stm_base.blocks.tm_like
    learn_during_prediction: false
    tm:
      _base_: TM.stm_mc
  TM2:
    _type_: block.stm_mc
    _base_: $_stm_base.blocks.tm_like
    learn_during_prediction: false
    tm:
      _base_: TM.stm_mc

datas:
  synthetic_sequences:
    _base_: $_stm_base.dataset.synthetic_sequences.general
    alphabet_size: 50
    encoder:
      _base_: $_stm_base.encoder.random.fixed_sds
      sds: [ 200, 10 ]
  dvc_sequences:
    _base_: $_stm_base.dataset.dvc_sequences
    sequential: True
  code_sequences:
    _base_: $_stm_base.dataset.text_sequences
    encoder:
      _base_: $_stm_base.encoder.random.fixed_sds
      sds: [ 600, 18 ]
    sequential: True
  text_sequences_bucket:
    _base_: $_stm_base.dataset.text_sequences
    filepath: ~/data/text/text8.txt
    max_size_hint: 1_000_000
    encoder:
      _base_: $_stm_base.encoder.bucket
      n_values: 27
      bucket_size: 5
      output_mode: rate
    sequential: True
  text_sequences_rnd:
    _base_: $_stm_base.dataset.text_sequences
    filepath: ~/data/text/text8.txt
    max_size_hint: 1_000_000
    encoder:
      _base_: $_stm_base.encoder.random.fixed_sds
      sds: [ 200, 10 ]
      output_mode: binary
    sequential: True

iterate_setups:
  default_100k:
    epochs: 50
    resample_frequency: 1
    sequences: [10, 1]
    elements: 200
  default_5x20k:
    epochs: 50
    resample_frequency: 5
    sequences: [10, 1]
    elements: 200
  large_400k:
    epochs: 100
    resample_frequency: 1
    sequences: [10, 1]
    elements: 400
  large_5x80k:
    epochs: 100
    resample_frequency: 5
    sequences: [10, 1]
    elements: 400

trackers:
  sdr:
    _type_: tracker.sdr
    on: ???
    step_flush_schedule: 4000
  tm:
    _type_: tracker.tm
    on: ???
  sdr_prediction:
    _type_: tracker.sdr_prediction
    on: ???
    step_flush_schedule: 4000
  sp_matching:
    _type_: tracker.sp_matching
    on: ???
    step_flush_schedule: 4000
  sp_synaptogenesis:
    _type_: tracker.sp_synaptogenesis
    on: ???
    step_flush_schedule: 4000
    track_split: False
  sp_synaptogenesis_concat:
    _base_: sp_synaptogenesis
    track_split: True

wandb_init:
  _base_: $_stm_base.wandb_init

stats_and_metrics:
  mae_normalization: no
  symmetrical_similarity: False
  distribution_metrics: pmf
  online_similarity_decay: 1.
  pmf_decay: 1.
  loss_normalization: False
  loss_layer_discount: 0.75
